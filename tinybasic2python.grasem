include(`tinybasic.grammar')

Basic [@statements] = [[def my_function ():\n${statements}\nmy_function ()]]
Statement_print [printkeyword exprList] = [[\ \ print (${exprList})\n]]
Statement_ifthen [ifkeyword e1 relop e2 thenkeyword statement] = [[\ \ if ${e1} ${relop} ${e2}:\n  ${statement}\n]]
Statement_goto [gotokeyword expression] = [[  ${gotokeyword} ${expression}\n]]
Statement_let [letkeyword v eqkeyword e] = [[\ \ ${v} ${eqkeyword} ${e}\n]]
Statement_gosub [gosubkeyword e] = [[  ${gosubkeyword} ${e}\n]]
Statement_return [returnkeyword] = [[  ${returnkeyword}\n]]

Expr_list [stringOrExpression1 @commaExpr] = [[${stringOrExpression1} ${commaExpr}\n]]
CommaExpr [commakeyword stringOrExpression] = [[${commakeyword} ${stringOrExpression}]]
Variable_list [v @commaVar] = [[${v}${commaVar}]]
CommaVar [commakeyword v] = [[${commakeyword}${v}]]
Expression [@plusMinusKeyword term @moreFactor] = [[${plusMinusKeyword} ${term} ${moreFactor}]]
MoreFactor [@plusMinusKeyword term] = [[${pluMinusKeyword} ${term}]]
Term [factor @moreFactor] = [[${factor} ${moreFactor}]] 
MoreFactor [timesDiv factor] = [[${timesDiv} ${factor}]]
Factor_var [v] = [[${v}]]
Factor_number [num] = [[${num}]]
Factor_paren [openParen e closeParen] = [[${openParen} ${e} ${closeParen}]]
Variable [c] = [[${c}]]
Number [@digit] = [[${digit}]]
string [q1 @cs q2] = [[${q1}${cs}${q2}]]
dq [q] = [[${q}]]
notDQ [c] = [[${c}]]

Relop_eq [op] = [[==]]
Relop_ne [op] = [[!=]]
Relop_le [op] = [[<=]]
Relop_lt [op] = [[<]]
Relop_ge [op] = [[>=]]
Relop_gt [op] = [[>]]
